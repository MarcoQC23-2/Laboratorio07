/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pantallas;
import Entidades.Cita;
import Entidades.Medico;
import Entidades.Paciente;
import Entidades.TextPrompt;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author mco_a
 */
public class GestorCitas extends javax.swing.JFrame {

    private NuevaCita nuevaCita;
    private VisualizarCita visualizarCita;
    private ListaPacientes listaPacientes;
    private ListaMedicos listaMedicos;
    
    private List<Cita> citas = new ArrayList<>();
   
    DefaultListModel listaCitas
            = new DefaultListModel();
    /**
     * Creates new form GestorCitas
     */
    public GestorCitas() {
        initComponents();
        TextPrompt txtPrompt = new TextPrompt("Buscar", txtBusqueda);
    }
    
    public GestorCitas(NuevaCita nuevaCita){
        initComponents();
        this.nuevaCita = nuevaCita;
    }
    
    public GestorCitas(VisualizarCita visualizarCita){
        initComponents();
        this.visualizarCita = visualizarCita;
        
        lstCitas.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) { // Detectar doble clic
                    int selectedIndex = lstCitas.getSelectedIndex();
                    
                    if (selectedIndex >= 0) {
                        
                       
                        Cita citaSeleccionado = citas.get(selectedIndex);
                        String paciente = citaSeleccionado.getPaciente().toString(); // Asegúrate de que getPaciente() devuelve un objeto adecuado
                        String medico = citaSeleccionado.getMedico().toString();
                        String especialidad = citaSeleccionado.getEspecialidad();
                        String fecha = citaSeleccionado.getFecha();
                        String hora = citaSeleccionado.getHora();
                        visualizarCita.mostrarCita(paciente, medico, especialidad, fecha, hora);
                        
                    }
                    visualizarCita.setVisible(true);
                }
            }
        });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCitas = new javax.swing.JList<>();
        txtBusqueda = new javax.swing.JTextField();
        btnNuevaCita = new javax.swing.JLabel();
        btnCancelarCita = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(null);

        lstCitas.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(lstCitas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 420, 150));

        txtBusqueda.setBackground(new java.awt.Color(255, 255, 255));
        txtBusqueda.setBorder(null);
        jPanel1.add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 290, 20));

        btnNuevaCita.setForeground(new java.awt.Color(204, 204, 204));
        btnNuevaCita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imágenes/Btn-Verde1.png"))); // NOI18N
        btnNuevaCita.setText("Nueva Cita");
        btnNuevaCita.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevaCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevaCitaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNuevaCitaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNuevaCitaMouseExited(evt);
            }
        });
        jPanel1.add(btnNuevaCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 284, -1, -1));

        btnCancelarCita.setForeground(new java.awt.Color(204, 204, 204));
        btnCancelarCita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imágenes/Btn-Rojo1.png"))); // NOI18N
        btnCancelarCita.setText("Cancelar Cita");
        btnCancelarCita.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelarCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarCitaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarCitaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarCitaMouseExited(evt);
            }
        });
        jPanel1.add(btnCancelarCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 284, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imágenes/JList1.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 108, 427, 155));

        btnBuscar.setForeground(new java.awt.Color(204, 204, 204));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imágenes/Btn-Azul1.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarMouseExited(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 55, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imágenes/TextField1.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 55, 311, 35));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Gestor de Citas");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imágenes/ListarPacientes.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevaCitaMouseClicked
        NuevaCita pantalla = new NuevaCita(this);
        pantalla.setLocationRelativeTo(this);
        pantalla.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnNuevaCitaMouseClicked

    public void agregarCita(Cita cita){
        
        citas.add(cita);
        actualizarLista();
    }
     
    public void actualizarLista(){
        listaCitas.removeAllElements();
        for(Cita cita: this.citas){
            listaCitas.addElement(
                    cita.getTexto());
        }
        lstCitas.setModel(listaCitas);
    }
    
    private void btnNuevaCitaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevaCitaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevaCitaMouseEntered

    private void btnNuevaCitaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevaCitaMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevaCitaMouseExited

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        txtBusqueda.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
            // No realiza búsqueda automática aquí
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
            // Cuando se borra el texto, se restaura la lista completa
                if (txtBusqueda.getText().trim().isEmpty()) {
                    lstCitas.setModel(listaCitas);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            // No realiza búsqueda automática aquí
            }
        });
        
        // Obtiene el texto de búsqueda en minúsculas
        String textoBusqueda = txtBusqueda.getText().trim().toLowerCase();

        if (textoBusqueda.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                    "Por favor, ingresa un término de búsqueda "
                            + "antes de hacer clic en Buscar.", 
                    "Campo de búsqueda vacío", 
                    JOptionPane.WARNING_MESSAGE
            );
        } else {
            // Crea un modelo para los resultados
            DefaultListModel resultadosModel = new DefaultListModel(); 

            for (Cita cita : citas) {
                // Obtiene el codigo y nombre del estudiante en minúsculas
                String pacienteCita = 
                        cita.getPaciente().toString();
                pacienteCita=pacienteCita.toLowerCase();
                
                String medicoCita =
                        cita.getMedico().toString();
                medicoCita = medicoCita.toLowerCase();
            
                // Agrega los cursos al modelo de resultados
                if (medicoCita.contains(textoBusqueda) || 
                        pacienteCita.contains(textoBusqueda))
                {
                    resultadosModel.addElement(
                            cita.getTexto()); 
                }
            }
        
            if (resultadosModel.isEmpty()) {
                // Muestra un mensaje si no se encontraron resultados
                JOptionPane.showMessageDialog(this, 
                        "No se encontraron resultados"
                                + " para la búsqueda.",
                        "Sin resultados", 
                        JOptionPane.INFORMATION_MESSAGE
                );
            
                // Restablece el modelo original
                lstCitas.setModel(listaCitas);
            } else {
                // Configura el modelo de resultados
                lstCitas.setModel(resultadosModel);
            }
        }
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void btnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMouseEntered

    private void btnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMouseExited

    private void btnCancelarCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarCitaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarCitaMouseClicked

    private void btnCancelarCitaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarCitaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarCitaMouseEntered

    private void btnCancelarCitaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarCitaMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarCitaMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestorCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestorCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestorCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestorCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestorCitas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnBuscar;
    private javax.swing.JLabel btnCancelarCita;
    private javax.swing.JLabel btnNuevaCita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstCitas;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
